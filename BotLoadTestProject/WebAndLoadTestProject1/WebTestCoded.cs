//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAndLoadTestProject1
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Amido.PerformanceTests.Common;


    public class WebTestCoded : WebTest
    {

        public WebTestCoded()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            WebTestRequest request1 = new WebTestRequest("https://directline.botframework.com/v3/directline/conversations");
            request1.Method = "POST";
            request1.Headers.Add(new WebTestRequestHeader("Authorization", "Bearer FTk1OxvYyCY.cwA.oQA.Cn9aCk2yZxsFzI2vkWccV66V3FsV2TsLRxfyISyIXe4"));
            FormPostHttpBody request1Body = new FormPostHttpBody();
            request1.Body = request1Body;
            WebTestRequest request1Dependent1 = new WebTestRequest(("https://directline.botframework.com/v3/directline/conversations/"
                            + (this.Context["ConvID"].ToString() + "/activities")));
            request1Dependent1.Method = "POST";
            request1Dependent1.Headers.Add(new WebTestRequestHeader("Authorization", "Bearer FTk1OxvYyCY.cwA.oQA.Cn9aCk2yZxsFzI2vkWccV66V3FsV2TsLRxfyISyIXe4"));
            StringHttpBody request1Dependent1Body = new StringHttpBody();
            request1Dependent1Body.ContentType = "application/json";
            request1Dependent1Body.InsertByteOrderMark = false;
            request1Dependent1Body.BodyString = "{\"type\":\"message\",\"text\":\"Hi\", \"from\":{\"id\":\"test\",\"name\":\"test\"}}";
            request1Dependent1.Body = request1Dependent1Body;
            WebTestRequest request1Dependent1Dependent1 = new WebTestRequest(("https://directline.botframework.com/v3/directline/conversations/"
                            + (this.Context["ConvID"].ToString() + "/activities")));
            request1Dependent1Dependent1.Method = "Get";
            request1Dependent1Dependent1.Headers.Add(new WebTestRequestHeader("Authorization", "Bearer FTk1OxvYyCY.cwA.oQA.Cn9aCk2yZxsFzI2vkWccV66V3FsV2TsLRxfyISyIXe4"));
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                JsonMessageIdValidationRule validationRule1 = new JsonMessageIdValidationRule();
                validationRule1.Name = "id";
                validationRule1.ContextVariableToValidate = "messageId";
                request1Dependent1Dependent1.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            request1Dependent1.DependentRequests.Add(request1Dependent1Dependent1);
            JsonExtractionRule extractionRule1 = new JsonExtractionRule();
            extractionRule1.Name = "id";
            extractionRule1.ContextParameterName = "messageId";
            request1Dependent1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            request1.DependentRequests.Add(request1Dependent1);
            JsonExtractionRule extractionRule2 = new JsonExtractionRule();
            extractionRule2.Name = "conversationId";
            extractionRule2.ContextParameterName = "ConvID";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule2.Extract);
            yield return request1;
            request1 = null;
        }
    }
}
